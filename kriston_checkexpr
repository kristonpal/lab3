/*
Program: To find if mathematical expression is valid or not.
* Author: Kriston Pal
* Date: 13/07/2016
- * Ref: Data Structures. Using C and C++, Chap 2, page 82
*/

#define MAXITEMS 50
#include<stdio.h>
#include<conio.h>
#include <string.h>

typedef struct{
	int top;
	char items [MAXITEMS];
}stack;

void push(stack* , char);
int pop (stack*);

int main()
{
	stack s;
	s.top= -1;
	char exp[MAXITEMS],out,symb;
	int i=0, valid=1;
	
	printf("Enter Mathematical expression:\n");
	gets(exp);
	while(i<=strlen(exp))
	{
		symb=exp[i];
		if(symb=='(' || symb=='{' || symb=='[')
		{
			push (&s,symb);
		}
		else if(symb==')'||symb=='}'||symb==']')
		{
			if(s.top == -1)
			{
				valid = 0;
			}
			else
			{
					out= pop(&s);
				if((symb==')' && out=='{') || (symb==')' && out=='['))
				valid = 0;
			}
		}
	
	  i++;
	}
	if(s.top!=-1)
	{
	valid=0;
	}

	if(valid==1)
	{
		printf("Entered Mathematical expression is valid");
	}
	else
		printf( "Entered Mathematical expression is not valid");
}

void push(stack *s, char x)
{
	if(s->top == MAXITEMS-1)
	{
		printf("stack overflow\n");
		exit(1);
	}
	else
	s->items[++(s->top)] = x;
	return;
}
int pop (stack*s)
{
	if (s->top == -1)
	{
		printf("stack underflow");
		exit(1);
	}
	return s->items[s->top--];

}
